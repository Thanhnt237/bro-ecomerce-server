# Custom Scalars
scalar Date
scalar Upload

type Query {
  getCategories(ID: String, search_string: String): [Categories]

  getSeller(ID: String, search_string: String): [Seller]

  getProducts(ID: String, search_string: String, categoriesID: String, sellerID: String): [Product]

  getVouchers(ID: String, search_string: String): [Voucher]

  getUsers(ID: String, search_string: String): [User]
}

type Mutation {
  initDatabases: RESPONSE

  addNewCategories(categories: [CateInsertInput]!): RESPONSE
  updateCategories(category: CateUpdateInput): RESPONSE

  addNewSeller(sellers: [SellerInsertInput]!): TokenResponse
  updateSeller(seller: SellerUpdateInput!): RESPONSE

  addNewProduct(products: [ProductInsertInput!]): RESPONSE
  updateProduct(product: ProductUpdateInput!): RESPONSE

  addNewVouchers(vouchers: [VoucherInsertInput]!): RESPONSE
  updateVoucher(voucher: VoucherUpdateInput!): RESPONSE

  addVoucherRef(vouchers: [IDOnly]!, products: [IDOnly]!): RESPONSE

  addNewUser(users: [UserInsertInput]!): RESPONSE
  updateUser(user: UserUpdateInput!): RESPONSE

  sellerLogin(username: String!, password: String!): SELLER_LOGIN
  userLogin(username: String!, password: String!): USER_LOGIN

  singleUpload(file: Upload!): File!
  multipleUpload(file: [Upload]!): File!
}
